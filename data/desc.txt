Indexed Streams: A Formal Intermediate Representation for Fused Contraction Programs
Kovach, Scott, et al. “Indexed Streams: A Formal Intermediate Representation for Fused Contraction Programs.” Proceedings of the ACM on Programming Languages, vol. 7, no. PLDI, June 2023, pp. 1169–93. Crossref, https://doi.org/10.1145/3591268.
We introduce indexed streams, a formal operational model and intermediate representation that describes the fused execution of a contraction language that encompasses both sparse tensor algebra and relational algebra. We prove that the indexed stream model is correct with respect to a functional semantics. We also develop a compiler for contraction expressions that uses indexed streams as an intermediate representation. The compiler is only 540 lines of code, but we show that its performance can match both the TACO compiler for sparse tensor algebra and the SQLite and DuckDB query processing libraries for relational algebra.