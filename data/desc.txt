Explicit Refinement Types
Ghalayini, Jad Elkhaleq, and Neel Krishnaswami. “Explicit Refinement Types.” Proceedings of the ACM on Programming Languages, vol. 7, no. ICFP, Aug. 2023, pp. 187–214. Crossref, https://doi.org/10.1145/3607837.
We present λ ert , a type theory supporting refinement types with &lt;em&gt;explicit proofs&lt;/em&gt;. Instead of solving refinement constraints with an SMT solver like DML and Liquid Haskell, our system requires and permits programmers to embed proofs of properties within the program text, letting us support a rich logic of properties including quantifiers and induction. We show that the type system is sound by showing that every refined program erases to a simply-typed program, and by means of a denotational semantics, we show that every erased program has all of the properties demanded by its refined type. All of our proofs are formalised in Lean 4.