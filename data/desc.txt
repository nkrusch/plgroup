More Fixpoints! (Functional Pearl)
Breitner, Joachim. “More Fixpoints! (Functional Pearl).” Proceedings of the ACM on Programming Languages, vol. 7, no. ICFP, Aug. 2023, pp. 686–710. Crossref, https://doi.org/10.1145/3607853.
Haskell’s laziness allows the programmer to solve some problems naturally and declaratively via recursive equations. Unfortunately, if the input is “too recursive”, these very elegant idioms can fall into the dreaded black hole, and the programmer has to resort to more pedestrian approaches. It does not have to be that way: We built variants of common pure data structures (Booleans, sets) where recursive definitions are productive. Internally, the infamous unsafePerformIO is at work, but the user only sees a beautiful and pure API, and their pretty recursive idioms – magically – work again.